name: "PRODUCTION ENV: DBT Snowflake Workflow"

on:
  push:
    branches:
      - main # Change this to your main branch name
  pull_request:
  workflow_dispatch: # Manually triggered workflow

jobs:
  run_python_script:
    runs-on: ubuntu-latest
    env:
      SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
      DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}
      DBT_USER: ${{ secrets.DBT_USER }}
    permissions:
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42


      - name: Build only the modified dbt models
        id: build_test
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          echo "Hello Abhishek";
          cd googleAdsAnalysis/;
          dbt deps;
          dbt run-operation clone_database --args "{'source_database':'DBT_PROD_ANALYTICS','destination_database':'DBT_DEV_ANALYTICS'}";
          list_of_models="";
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
            if [[ $file == *.sql ]]; then
              if [ -z "$sql_files" ]; then
                list_of_models="$(basename $file .sql)"
              else
                list_of_models="list_of_models,$(basename $file .sql)"
              fi
            fi
          done
          if [ -z "$list_of_models" ]; then
            echo "No models to build"
          else
            echo "dbt build -m $list_of_models";
          fi

        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6
        env:
          PLAN: "${{ steps.build_test.outputs.stdout }}"
        with:
          github-token: ${{ secrets.AR_GITHUB_TOKEN }}
          script: |
            console.log("#### DBT Build Output ðŸ“–", '${{ steps.build_test.outputs.stdout }}');
            const output = `#### DBT Build Status ðŸ“–\`${{ steps.build_test.outcome }}\`
            
            <details><summary>Show DBT Build Output</summary>
            
            \`\`\`dbt\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
